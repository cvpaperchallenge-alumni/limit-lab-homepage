name: deploy-to-s3
permissions:
  contents: read
  actions: read
  pages: write
  id-token: write
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DOCKER_COMPOSE_DIRECTORY: environments/ci
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check version info
        run: pwd && docker compose version && docker --version

      - name: Get UID/GID of the runner
        id: get_uid_gid
        run: |
          echo "HOST_UID=$(id -u)" >> $GITHUB_ENV
          echo "HOST_GID=$(id -g)" >> $GITHUB_ENV

      - name: Create and start docker container
        run: docker compose up -d
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Build webpage in Docker container
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}
        run: docker compose exec -T frontend npm run build

      - name: Stop container
        if: always()
        run: docker compose down
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-artifact
          path: ./out

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: built-artifact
          path: ./out

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync built files to S3
        run: aws s3 sync out s3://${{ secrets.S3_BUCKET_NAME }} --delete
